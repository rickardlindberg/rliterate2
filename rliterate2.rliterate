{
"root_page":{
"children":[
{
"children":[],
"id":"27c8072213a94090a6d0d5e1362ab3ed",
"paragraphs":[
{
"chunkpath":[
"functions"
],
"filepath":[
"rliterate2.py"
],
"fragments":[
{
"text":"def load_document_from_file(path):\n    if os.path.exists(path):\n        return load_json_from_file(path)\n    else:\n        return create_new_document()\n",
"type":"code"
}
],
"id":"7f67cb9003a14964a74bf495a8cce6f8",
"type":"code"
},
{
"chunkpath":[
"functions"
],
"filepath":[
"rliterate2.py"
],
"fragments":[
{
"text":"def create_new_document():\n    return {\n        \"root_page\": create_new_page(),\n        \"variables\": {},\n    }\n",
"type":"code"
}
],
"id":"1c35c112ce9f41659a6a6c8a4062f564",
"type":"code"
},
{
"chunkpath":[
"functions"
],
"filepath":[
"rliterate2.py"
],
"fragments":[
{
"text":"def create_new_page():\n    return {\n        \"id\": genid(),\n        \"title\": \"New page...\",\n        \"children\": [],\n        \"paragraphs\": [],\n    }\n",
"type":"code"
}
],
"id":"62b40e83cdde43209245d76e123bdb5a",
"type":"code"
},
{
"chunkpath":[
"functions"
],
"filepath":[
"rliterate2.py"
],
"fragments":[
{
"text":"def genid():\n    return uuid.uuid4().hex\n",
"type":"code"
}
],
"id":"e6bca528d2f94219b720e92cd5ddf925",
"type":"code"
}
],
"title":"Document"
},
{
"children":[],
"id":"c1cd2a1b4a264ccba3652eb61c1d42f9",
"paragraphs":[
{
"chunkpath":[
"classes"
],
"filepath":[
"rliterate2.py"
],
"fragments":[
{
"text":"class Project(object):\n\n    def __init__(self, doc):\n        self._doc = doc\n\n    def create_view(self):\n        return {\n            \"toolbar\": {\n                \"border\": 4,\n            },\n            \"toc\": {},\n            \"workspace\": {},\n        }\n",
"type":"code"
}
],
"id":"817bfdde2cd042328c69a297120bdf9d",
"type":"code"
}
],
"title":"Project"
},
{
"children":[
{
"children":[],
"id":"9db84eb8d14a4112840116f6cc7e119f",
"paragraphs":[
{
"chunkpath":[
"functions"
],
"filepath":[
"rliterate2.py"
],
"fragments":[
{
"text":"def load_json_from_file(path):\n    with open(path) as f:\n        return json.load(f)\n",
"type":"code"
}
],
"id":"a72a9cd9a686412380866288ba800032",
"type":"code"
}
],
"title":"JSON"
}
],
"id":"f0ec3620177047238aaecb5777a789db",
"paragraphs":[],
"title":"Utilities"
},
{
"children":[
{
"children":[],
"id":"21c17f5017644b69b2698822a4ce524e",
"paragraphs":[
{
"chunkpath":[
"classes"
],
"filepath":[
"rliterate2.py"
],
"fragments":[
{
"text":"frame MainFrame %vbox {\n  Toolbar(#toolbar %expand)\n  HBorder(color=\"#aaaaaa\" %expand thickness=1)\n  MainArea(toc=#toc workspace=#workspace %expand %proportion[2])\n}\n",
"type":"code"
}
],
"id":"7501efbaaca640c9aaf8e66a7309ad74",
"language":"rlgui",
"post_process":[
"python",
"rlgui/rlgui.py"
],
"type":"code"
},
{
"chunkpath":[
"classes"
],
"filepath":[
"rliterate2.py"
],
"fragments":[
{
"text":"panel MainArea %hbox {\n  TableOfContents(#toc %expand)\n  VBorder(color=\"#aaaaaa\" %expand thickness=1)\n  Workspace(#workspace %expand %proportion[1])\n}\n",
"type":"code"
}
],
"id":"a8e40ef2da854034b55c8c7a3097e3ba",
"language":"rlgui",
"post_process":[
"python",
"rlgui/rlgui.py"
],
"type":"code"
}
],
"title":"Main frame"
},
{
"children":[],
"id":"a52749c4dac1446ba6877e63f59b00d3",
"paragraphs":[
{
"chunkpath":[
"classes"
],
"filepath":[
"rliterate2.py"
],
"fragments":[
{
"text":"panel Toolbar %hbox {\n  BoxSpace(#border)\n  ToolbarButton(\n    icon=\"quit\"\n    %border[#border,TOP|BOTTOM]\n  )\n  BoxSpace(#border)\n}\n",
"type":"code"
}
],
"id":"7d87330167694a41a0222b278aeb5aa5",
"language":"rlgui",
"post_process":[
"python",
"rlgui/rlgui.py"
],
"type":"code"
}
],
"title":"Toolbar"
},
{
"children":[],
"id":"1f79ba6407164d8dbcc3f2e90f409093",
"paragraphs":[
{
"chunkpath":[
"classes"
],
"filepath":[
"rliterate2.py"
],
"fragments":[
{
"text":"panel TableOfContents %vbox {\n  #background = \"#ffffff\"\n  #min_size   = size(250 -1)\n}\n",
"type":"code"
}
],
"id":"e0db56dacc9f4aa3b223033b6feee2f2",
"language":"rlgui",
"post_process":[
"python",
"rlgui/rlgui.py"
],
"type":"code"
}
],
"title":"Table of contents"
},
{
"children":[],
"id":"e6a157bbac8842a2b8c625bfa9255159",
"paragraphs":[
{
"chunkpath":[
"classes"
],
"filepath":[
"rliterate2.py"
],
"fragments":[
{
"text":"panel Workspace %hbox {\n}\n",
"type":"code"
}
],
"id":"3e408b8af8bf432f9db783f07ea161d8",
"language":"rlgui",
"post_process":[
"python",
"rlgui/rlgui.py"
],
"type":"code"
}
],
"title":"Workspace"
},
{
"children":[],
"id":"b022c98477a04ed2a492e75f63e75796",
"paragraphs":[
{
"chunkpath":[
"classes"
],
"filepath":[
"rliterate2.py"
],
"fragments":[
{
"text":"panel HBorder %vbox {\n  #background = #color\n  #min_size   = size(-1 #thickness)\n}\n",
"type":"code"
}
],
"id":"6b9bbfc9a6cd4bb88cea712ebb9909dd",
"language":"rlgui",
"post_process":[
"python",
"rlgui/rlgui.py"
],
"type":"code"
},
{
"chunkpath":[
"classes"
],
"filepath":[
"rliterate2.py"
],
"fragments":[
{
"text":"panel VBorder %vbox {\n  #background = #color\n  #min_size   = size(#thickness -1)\n}\n",
"type":"code"
}
],
"id":"5c17f50053b24b4cadb41b3de44a038a",
"language":"rlgui",
"post_process":[
"python",
"rlgui/rlgui.py"
],
"type":"code"
}
],
"title":"Borders"
}
],
"id":"d625649aae0a40bcb3e2e8cc9ede4373",
"paragraphs":[],
"title":"GUI"
},
{
"children":[
{
"children":[],
"id":"26afd5121ebb4f6eafe5ccb1e934ffd3",
"paragraphs":[
{
"chunkpath":[
"classes"
],
"filepath":[
"rlgui",
"rlgui.py"
],
"fragments":[
{
"text":"GuiParser {\n  widget = containerType:c name:x boxType:b ws '{' bodyParts:d ws '}' ws !. -> [\n    \"widget\"\n    x\n    c\n    b\n    extract(d \"property\")\n    extract(d \"instance\")\n  ]\n  containerType = ws (\n    | 'frame'\n    | 'panel'\n    ):x !NameChar -> [\"container\" x]\n  boxType = ws (\n    | '%vbox'\n    | '%hbox'\n    ):x !NameChar -> [\"box\" x]\n  bodyParts = body*:xs -> partition(xs)\n  body = builtIn | instance | property\n  builtIn =\n    | ws 'BoxSpace(' expr:x ')' -> [\"instance\" \"BoxSpace\" x]\n  instance = name:x '(' instanceBody*:xs ws ')' -> [\"instance\" x xs]\n  instanceBody = sizer | propExplode | propAssign\n  propAssign = name:x ws '=' expr:y -> [\"propAssign\" x y]\n  propExplode = ws '#' Name:x !NameChar -> [\"propExplode\" x]\n  sizer =\n    | ws '%proportion[' number:x ']' -> [\"sizer\" \"proportion\" x]\n    | ws '%expand' !NameChar -> [\"sizer\" \"expand\"]\n    | ws '%border[' expr:x ',' borderSides:y ']' -> [\"sizer\" \"border\" x ~y]\n  borderSides = borderSide:x ('|' borderSide)*:xs -> [x ~xs]\n  borderSide = (\n    | 'TOP'\n    | 'BOTTOM'\n    ):x -> [\"borderSide\" x]\n  property = ws '#' Name:x ws '=' expr:y -> [\"property\" x y]\n  propertyRef = ws '#' Name:x -> [\"propertyRef\" x]\n  expr = string | call | number | propertyRef\n  string = ws '\"' (!'\"' .)*:xs '\"' -> [\"string\" join(xs)]\n  call = name:x '(' expr*:xs ws ')' -> [\"call\" x ~xs]\n  number = ws ('-' | -> \"\"):x Digit:y Digit*:ys -> [\"number\" int(join([x y ~ys]))]\n  Digit = '0'-'9'\n  name = ws Name\n  ws = (' ' | '\\n')*\n  Name = NameStart:x NameChar*:xs -> join([x ~xs])\n  NameStart = 'a'-'z' | 'A'-'Z' | '_'\n  NameChar  = NameStart | '0'-'9'\n}\n",
"type":"code"
}
],
"id":"d69da27c0c3046f08ad2347433cdaaf3",
"language":"rlmeta",
"post_process":[
"python",
"rlmeta/rlmeta.py"
],
"type":"code"
},
{
"chunkpath":[
"support"
],
"filepath":[
"rlgui",
"rlgui.py"
],
"fragments":[
{
"text":"join = \"\".join\n",
"type":"code"
}
],
"id":"b762d2f9dacf44c0914eadb32ef5d1fc",
"language":"",
"post_process":[],
"type":"code"
},
{
"chunkpath":[
"support"
],
"filepath":[
"rlgui",
"rlgui.py"
],
"fragments":[
{
"text":"def partition(values):\n    by_type = defaultdict(list)\n    for x in values:\n        by_type[x[0]].append(x)\n    return by_type\n\ndef extract(by_type, name):\n    return by_type[name]\n",
"type":"code"
}
],
"id":"cdbf7f0cd1754a718c370450a4f01496",
"language":"",
"post_process":[],
"type":"code"
},
{
"chunkpath":[
"classes"
],
"filepath":[
"rlgui",
"rlgui.py"
],
"fragments":[
{
"text":"WxCodeGenerator {\n  ast = [%:x] -> x\n  astItems =\n    | ast:x astItem*:xs -> { x xs }\n    |                   -> {}\n  astItem = ast:x -> { \", \" x }\n  widget = .:name ast:container ast:sizer [ast*:props] [ast*:inst] -> {\n    \"class \" name \"(\" container \"):\\n\\n\" >\n      \"def _get_props(self):\\n\" >\n        \"return {\\n\" >\n          props\n        < \"}\\n\\n\"\n      <\n      \"def _create_sizer(self):\\n\" >\n        \"return \" sizer \"\\n\\n\"\n      <\n      \"def _create_widgets(self):\\n\" >\n        \"pass\\n\"\n        inst\n      <\n    <\n  }\n  instance =\n    | \"BoxSpace\" ast:x -> {\n      \"self._create_space(\" x \")\\n\"\n    }\n    | .:name [ast*:xs] -> {\n      \"props = {}\\n\"\n      \"sizer = {\\\"flag\\\": 0, \\\"border\\\": 0, \\\"proportion\\\": 0}\\n\"\n      xs\n      \"self._create_widget(\" name \", props, sizer)\\n\"\n    }\n  sizer =\n    | \"proportion\" ast:x      -> { \"sizer[\\\"proportion\\\"] = \" x \"\\n\" }\n    | \"expand\"                -> { \"sizer[\\\"flag\\\"] |= wx.EXPAND\\n\" }\n    | \"border\" ast:x ast*:ys  -> { \"sizer[\\\"border\\\"] = \" x \"\\n\" ys }\n  borderSide =\n    | \"TOP\"    -> \"sizer[\\\"flag\\\"] |= wx.TOP\\n\"\n    | \"BOTTOM\" -> \"sizer[\\\"flag\\\"] |= wx.BOTTOM\\n\"\n  property = py:name ast:default -> {\n    name \": \" default \",\\n\"\n  }\n  propertyRef = py:name -> { \"self._props[\" name \"]\" }\n  propAssign = py:name ast:value -> { \"props[\" name \"] = \" value \"\\n\" }\n  propExplode = py:name -> { \"for k, v in self._props[\" name \"].items():\\n\" >\n                                 \"props[k] = v\\n\" < }\n  call = .:name astItems:y -> { name \"(\" y \")\" }\n  box =\n    | \"%vbox\" -> \"wx.BoxSizer(wx.VERTICAL)\"\n    | \"%hbox\" -> \"wx.BoxSizer(wx.HORIZONTAL)\"\n  container =\n    | \"frame\" -> \"RLGuiFrame\"\n    | \"panel\" -> \"RLGuiPanel\"\n  string = py\n  number = py\n  py = .:x -> repr(x)\n}\n",
"type":"code"
}
],
"id":"68d4bdf87385458bbeda3cad93d14212",
"language":"rlmeta",
"post_process":[
"python",
"rlmeta/rlmeta.py"
],
"type":"code"
},
{
"chunkpath":[],
"filepath":[
"rlgui",
"rlgui.py"
],
"fragments":[
{
"text":"#!/usr/bin/env python2\n\nfrom collections import defaultdict\nimport sys\n\n",
"type":"code"
},
{
"blank_lines_before":1,
"path":[
"support"
],
"prefix":"",
"type":"chunk"
},
{
"text":"\n",
"type":"code"
},
{
"blank_lines_before":1,
"path":[
"classes"
],
"prefix":"",
"type":"chunk"
},
{
"text":"\nif __name__ == \"__main__\":\n    parser = GuiParser()\n    codegenerator = WxCodeGenerator()\n    try:\n        sys.stdout.write(\n            codegenerator.run(\"ast\", parser.run(\"widget\", sys.stdin.read()))\n        )\n    except _MatchError as e:\n        sys.stderr.write(e.describe())\n        sys.exit(1)\n",
"type":"code"
}
],
"id":"e8901611eb4941229bd35edab5f6e8b7",
"type":"code"
},
{
"chunkpath":[
"support"
],
"filepath":[
"rlgui",
"rlgui.py"
],
"fragments":[
{
"text":"# Placeholder to generate support library\n",
"type":"code"
}
],
"id":"7f08cdb6050944b98378a4b4106105d9",
"language":"",
"post_process":[
"python",
"rlmeta/rlmeta.py",
"--support"
],
"type":"code"
},
{
"chunkpath":[
"functions"
],
"filepath":[
"rliterate2.py"
],
"fragments":[
{
"text":"def size(w, h):\n    return wx.Size(w, h)\n",
"type":"code"
}
],
"id":"90df86522a67483095acdf98bf1c58a8",
"language":"",
"post_process":[],
"type":"code"
}
],
"title":"Compiler"
},
{
"children":[],
"id":"da31b318d9f2479496494b3e56985a07",
"paragraphs":[
{
"chunkpath":[
"base classes"
],
"filepath":[
"rliterate2.py"
],
"fragments":[
{
"text":"class RLGuiMixin(object):\n\n    def __init__(self, props):\n        self._props = {}\n        self._update_props(props)\n        self._create_gui()\n\n    def UpdateProps(self, props):\n        if self._update_props(props):\n            self._update_gui()\n\n    def _update_props(self, props):\n        self._changed_props = []\n        for p in [lambda: props, self._get_props]:\n            for key, value in p().items():\n                if self._prop_differs(key, value):\n                    self._props[key] = value\n                    self._changed_props.append(key)\n        return len(self._changed_props) > 0\n\n    def _prop_differs(self, key, value):\n        if key not in self._props:\n            return True\n        if self._props[key] is value:\n            return False\n        if self._props[key] == value:\n            return False\n        return True\n\n    def _create_gui(self):\n        pass\n\n    def _update_gui(self):\n        pass\n\n    def _get_props(self):\n        return {}\n",
"type":"code"
}
],
"id":"a0987644a69445dea88e612f31f16eba",
"type":"code"
},
{
"chunkpath":[
"base classes"
],
"filepath":[
"rliterate2.py"
],
"fragments":[
{
"text":"class RLGuiContainerMixin(RLGuiMixin):\n\n    def _create_gui(self):\n        self.Sizer = self._create_sizer()\n        self._children = []\n        self._create()\n\n    def _update_gui(self):\n        self._create()\n        self.Layout()\n        self.Refresh()\n\n    def _update_builtin(self):\n        for name in self._changed_props:\n            if name == \"background\":\n                self.SetBackgroundColour(self._props[\"background\"])\n            if name == \"min_size\":\n                self.SetMinSize(self._props[\"min_size\"])\n\n    def _create(self):\n        self._update_builtin()\n        self._sizer_index = 0\n        self._child_index = 0\n        self._create_widgets()\n\n    def _create_widget(self, widget_cls, props, sizer):\n        widget = widget_cls(self, props)\n        self.Sizer.Insert(self._sizer_index, widget, **sizer)\n        self._sizer_index += 1\n        self._children.insert(self._child_index, widget)\n        self._child_index += 1\n\n    def _create_space(self, thickness):\n        if self._child_index >= len(self._children):\n            space = self.Sizer.Insert(\n                self._sizer_index,\n                self._get_space_size(thickness)\n            )\n            self._children.insert(self._child_index, space)\n        else:\n            self._children[self._child_index].SetMinSize(\n                self._get_space_size(thickness)\n            )\n        self._sizer_index += 1\n        self._child_index += 1\n\n    def _get_space_size(self, size):\n        if self.Sizer.Orientation == wx.HORIZONTAL:\n            return (size, 1)\n        else:\n            return (1, size)\n",
"type":"code"
}
],
"id":"e09eeec305864f0e9a791b0e287def75",
"type":"code"
},
{
"chunkpath":[
"base classes"
],
"filepath":[
"rliterate2.py"
],
"fragments":[
{
"text":"class RLGuiFrame(wx.Frame, RLGuiContainerMixin):\n\n    def __init__(self, parent, props):\n        wx.Frame.__init__(self, parent)\n        RLGuiContainerMixin.__init__(self, props)\n",
"type":"code"
}
],
"id":"1f2d77d65d6345b884d7755a1e963332",
"type":"code"
},
{
"chunkpath":[
"base classes"
],
"filepath":[
"rliterate2.py"
],
"fragments":[
{
"text":"class RLGuiPanel(wx.Panel, RLGuiContainerMixin):\n\n    def __init__(self, parent, props):\n        wx.Panel.__init__(self, parent)\n        RLGuiContainerMixin.__init__(self, props)\n",
"type":"code"
}
],
"id":"c16e05ddb3ef4549ad64ffc3f46a411a",
"type":"code"
},
{
"chunkpath":[
"base classes"
],
"filepath":[
"rliterate2.py"
],
"fragments":[
{
"text":"class RLGuiPanel(wx.Panel, RLGuiContainerMixin):\n\n    def __init__(self, parent, props):\n        wx.Panel.__init__(self, parent)\n        RLGuiContainerMixin.__init__(self, props)\n",
"type":"code"
}
],
"id":"ed59b02189cd466c8409d47dae04ed0b",
"type":"code"
},
{
"chunkpath":[
"base classes"
],
"filepath":[
"rliterate2.py"
],
"fragments":[
{
"text":"class ToolbarButton(wx.BitmapButton, RLGuiMixin):\n\n    def __init__(self, parent, props):\n        wx.BitmapButton.__init__(\n            self,\n            parent,\n            bitmap=wx.ArtProvider.GetBitmap(\n                {\n                    \"add\": wx.ART_ADD_BOOKMARK,\n                    \"back\": wx.ART_GO_BACK,\n                    \"forward\": wx.ART_GO_FORWARD,\n                    \"undo\": wx.ART_UNDO,\n                    \"redo\": wx.ART_REDO,\n                    \"quit\": wx.ART_QUIT,\n                    \"save\": wx.ART_FILE_SAVE,\n                }.get(props.get(\"icon\"), wx.ART_QUESTION),\n                wx.ART_BUTTON,\n                (24, 24)\n            ),\n            style=wx.NO_BORDER\n        )\n        RLGuiMixin.__init__(self, props)\n",
"type":"code"
}
],
"id":"a18b175c332a41bebdeb0acb6332dcbd",
"type":"code"
}
],
"title":"Support library"
}
],
"id":"f4c7873224fb4dfcbe73180d7afdfd72",
"paragraphs":[],
"title":"GUI framework"
},
{
"children":[],
"id":"d7be6502fd58490ba70d873d1c71b193",
"paragraphs":[
{
"chunkpath":[
"functions"
],
"filepath":[
"rliterate2.py"
],
"fragments":[
{
"text":"def main():\n    app = wx.App()\n    project = Project(load_document_from_file(sys.argv[1]))\n    frame = MainFrame(None, project.create_view())\n    frame.Show()\n    app.MainLoop()\n",
"type":"code"
}
],
"id":"9e71e85a89e143fe86cb4b90a5eed8a7",
"type":"code"
}
],
"title":"Main"
},
{
"children":[],
"id":"165a1189e30f4ce5b22001ea8091aa9c",
"paragraphs":[
{
"chunkpath":[],
"filepath":[
"rliterate2.py"
],
"fragments":[
{
"text":"#!/usr/bin/env python3\n\nimport os\nimport sys\nimport uuid\nimport wx\n\n",
"type":"code"
},
{
"blank_lines_before":1,
"path":[
"base classes"
],
"prefix":"",
"type":"chunk"
},
{
"text":"\n",
"type":"code"
},
{
"blank_lines_before":1,
"path":[
"classes"
],
"prefix":"",
"type":"chunk"
},
{
"text":"\n",
"type":"code"
},
{
"blank_lines_before":1,
"path":[
"functions"
],
"prefix":"",
"type":"chunk"
},
{
"text":"\nif __name__ == \"__main__\":\n    main()\n",
"type":"code"
}
],
"id":"264da9dfb5c04b259a001f47538827a8",
"type":"code"
}
],
"title":"File"
}
],
"id":"46533f3be0674d1cae08ff281edbc37d",
"paragraphs":[],
"title":"RLiterate 2"
},
"variables":{}
}